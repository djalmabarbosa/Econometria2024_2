---
title: "Econometria"
subtitle: "Análise de dados | Prof. Djalma Barbosa"
format: 
    revealjs:
      slide-number: true
      slide-level: 3
      logo: logoUfr.png
      incremental: true
      scrollable: true
      theme: simple
      code-fold: false
      self-contained: true
editor: visual
---

## Análise de dados

A análise de dados vem sendo cada vez mais frequente no ambiente contábil/empresarial.

A análise de dados envolve descrição, comparação e modelagem, relacionando características de tempo, pessoa e lugar.

Por meio dela podemos identificar:

1.  perfis
2.  padrões
3.  tendências
4.  acompanhamento

![Tabela com dados municipais](Tabela_dados_municipios.png)

Utilizaremos os dados da tabela acima como exemplo ao longo da disciplina.

Contruiremos roteiros (*scripts*) com comandos em R.

As linhas de código irão conter os seguintes elementos definidos abaixo:

| Termos        | Sinônimos                             | Descrição                                                                                               |
|--------------------|--------------------------|--------------------------|
| Base de dados | banco de dados, *dataframes*, tabelas | Estrutura de armazenamento dos dados                                                                    |
| Variável      | Coluna, *column*,Cabeçalho            | Onde os dados (valores, registos ou observações) são armazenados e que é utilizado durante a análise    |
| Linha         | *row*, Observação, Registro, Valor    | São dados de diferentes tipos (números, datas, textos, etc                                              |
| Função        | Verbo, Comando, Ação                  | São ordens dadas ao software R, para que ele execute uma ação necessária para sua análise               |
| Argumento     | Parâmetros                            | Criar uma personalização de características para executar um comando (cores, tamanhos, caracteres, etc) |

| Output \| Resultado \| São as saídas oriundas de uma ação solicitada, ou seja, tudo que queremos que nosso código no R retorne para nós, podendo ser no formato de textos, tabelas, gráficos, mapas, imagens, etc. \|

## Bancos de dados (*Dataframes*)

Bancos de dados, ou *dataframes* são dados organizados em duas dimensões, linhas e colunas.

Em um *dataframe* cada coluna representa uma variável e cada linha uma observação.

![Tabela com dados municipais](Tabela_dados_municipios.png)

As colunas tem como características:

-   são visualizadas verticalmente na tela

-   cada coluna é única

-   contêm dados do mesmo tipo (texto, número...)

-   são mencionadas pelos nomes, que aparecem na parte superior como títulos, os cabeçalhos

As linhas (observações, valores ou registros) tem como características:

-   são visualizadas horizontalmente na tela

-   podem conter um conjunto de tipos de dados (números, textos, datas...) para cada registro

O primeiro passo para a análise de dados é importar os dados.

## Importando dados

-   A linguagem R é um paradigma de **programação orientada a objetos**. Qualquer estrutura é armazenada na forma de um **objeto**, podendo ser um valor, conjunto de valores o um mesmo uma base de dados.

-   Para criar e alterar objetos no R utilizamos o símbolo \<-, chamado de **operador de atribuição**.

    -   Também podemos utilizar '=' para atribuição, mas como ele tem outros usos, pode gerar confusão.

        ![Atribuição de dados a um objeto no R (Fonte: Introdução à Análise de Dados no R)](atribuição.png)

-   Antes de importarmos os dados, temos que discutir o conceito de função

### Funções no R

-   O R é uma linguagem funcional

-   Funções vêm associadas a parênteses '( )', onde colocamos os *argumentos da função*.

-   Exemplos da matemática: $y = f(x)$, $z = f(x,y)$ ...

### Importando arquivos no formato CSV

-   Utilizaremos uma **função** do pacote *readr*.

1.  Crie um projeto (ou use o que vc já criou).

2.  Crie um *script* (*File, New file e R Script*)

3.  Digite:

    ```         
    if(!require(readr)) install.packages("readr")
    ```

    ```
    library (readr)
    ```
4. Faça comentários no seu código para explicar os comando acima

